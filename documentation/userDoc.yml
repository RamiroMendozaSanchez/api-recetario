openapi: '3.0.2'
info:
  title: RECETARIO
  version: 0.0.1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      description: Model User
      type: object
      properties:
        name:
          type: string
          description: "username"
        password:
          type: string
          description: "User password"
        email:
          type: string
          format: email
          description: "email user"
        date:
          type: string
          format: date
          description: "Date"
        profileImage:
          type: string
          description: "Avatar image"
      example:
        name: "John Doe"
        password: ""
        email: "john@example.com"
        date: "2024-04-20T10:09:41.047+00:00"
        profileImage: "default.png"
    UserBD:
      description: Response BD
      allOf:
        - $ref: "#/components/schemas/User"
        - type: object
          properties:
            _id:
              type: string
              description: "ID BD"
            __V:
              type: integer
              description: "Version data in BD"
          example:
            _id: 662a22ba86c60db3c87214
            __V: 0

      

servers:
  - url: http://localhost:3000/

paths:
  /api/user/create:
    post:
      summary: Registro de usuarios
      tags:
        - "User"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
                email:
                  type: string
                profileImage:
                  type: string
                  default: default.png
      security:
        - bearerAuth: []
      responses:
        '404':
          description: Error
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string 
                    example: error
                  message:
                    type: string
                    example: Error al guardar el usuario

        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties: 
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Usuario creada con éxito
                  user:
                      $ref: "#/components/schemas/UserBD"
                        
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: Token invalido
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    example: error
                  message: 
                    type: string
                    example: error
  /api/user/list-all:
    get:
      security:
        - bearerAuth: []
      tags:
        - "User"
      summary: Listado de usuarios
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  count:
                    type: number
                    example: 1
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"     
        '404':
          description: Error
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string 
                    example: "error"
                  message:
                    type: string
                    example: "No se han encontrado usuarios" 
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string 
                    example: "error"
                  message: 
                    type: string
                    example: Token invalido    
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    example: error
                  message: 
                    type: string
                    example: error
  
  /api/user/edit:
    post:
      security:
        - bearerAuth: []
      tags:
        - "User"
      summary: Edición de usuarios
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - "id"
                - "password"
              properties:
                id:
                  type: string
                name:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  count:
                    type: number
                    example: 1
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"     
        '404':
          description: Error
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string 
                    example: "error"
                  message:
                    type: string
                    example: "No se han encontrado usuarios" 
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string 
                    example: "error"
                  message: 
                    type: string
                    example: Token invalido    
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    example: error
                  message: 
                    type: string
                    example: error

      
